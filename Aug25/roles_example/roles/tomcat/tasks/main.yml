- name: install openjdk in Ubuntu with "{{ java_package_name }}"
  ansible.builtin.apt:
    name: "{{ java_package_name }}"
    update_cache: yes
    state: present
  when: ansible_facts['distribution'] == "Ubuntu"
- name: install openjdk in RedHat with "{{ java_package_name }}"
  ansible.builtin.dnf:
    name: "{{ java_package_name }}"
    state: present
  when: ansible_facts['distribution'] == "RedHat"
- name: create a user tomcat
  ansible.builtin.user:
    name: "{{ user_name }}"
    create_home: yes
    home: "{{ user_home }}"
    shell: "{{ user_shell }}"
    state: present
- name: register info in a variable
  ansible.builtin.stat:
    path: "{{ user_home }}/bin/startup.sh"
  register: tomcat_status
- name: extracting tomcat
  ansible.builtin.unarchive:
    src: "{{ download_url }}"
    dest: "{{ user_home }}"
    remote_src: yes
    extra_opts: [ --strip-components=1 ]
  when: not tomcat_status.stat.exists
  notify:
    - recursive change ownership to tomcat
    - change permission of conf

- name: Flush handlers
  meta: flush_handlers
- name: change permission of logs
  ansible.builtin.file:
    path: "{{ user_home }}/logs"
    state: directory
    recurse: yes
    mode: '0766'
- name: create a tomcat service file
  ansible.builtin.template:
    src: tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
- name: enable and start tomcat
  ansible.builtin.systemd_service:
    name: tomcat.service
    daemon_reload: yes
    state: started
    enabled: yes